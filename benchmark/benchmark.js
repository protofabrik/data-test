"#!/usr/bin/env node\n'use strict';\nconst benchmark = require('nodemark');\n\nconst sync = (fn) => {\n\tdisplay(benchmark(fn));\n};\n\nconst async = (fn) => {\n\tconst wrapped = cb => fn().then(() => cb(), cb);\n\tbenchmark(wrapped).then(display);\n};\n\nconst display = (result) => {\n\tprocess.stdout.write(String(result).replace(/ \\(.*/, ''));\n\tprocess.exit();\n};\n\n(async () => {\n\tprocess.on('unhandledRejection', (err) => { throw err; });\n\tconst ctx = JSON.parse(process.argv[2]);\n\tconst type = require(`./types/${ctx.type}`);\n\tconst db = await require('./drivers').get(ctx.driver)('../temp/benchmark.db', ctx.pragma);\n\tif (!type.readonly) {\n\t\tfor (const table of ctx.tables) await db.exec(`DELETE FROM ${table} WHERE rowid > 1;`);\n\t\tawait db.exec('VACUUM;');\n\t}\n\tconst fn = type[ctx.driver](db, ctx);\n\tif (typeof fn === 'function') setImmediate(sync, fn);\n\telse setImmediate(async, await fn);\n})();\n"