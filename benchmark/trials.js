"'use strict';\n\nexports.default = [\n\t{ type: 'select', table: 'small', columns: ['nul', 'integer', 'real', 'text'],\n\t\tdescription: 'reading rows individually' },\n\t{ type: 'select-all', table: 'small', columns: ['nul', 'integer', 'real', 'text'],\n\t\tdescription: 'reading 100 rows into an array' },\n\t{ type: 'select-iterate', table: 'small', columns: ['nul', 'integer', 'real', 'text'],\n\t\tdescription: 'iterating over 100 rows' },\n\t{ type: 'insert', table: 'small', columns: ['nul', 'integer', 'real', 'text'],\n\t\tdescription: 'inserting rows individually' },\n\t{ type: 'transaction', table: 'small', columns: ['nul', 'integer', 'real', 'text'],\n\t\tdescription: 'inserting 100 rows in a single transaction' },\n];\n\nexports.searchable = [\n\t{ type: 'select', table: 'small', columns: ['nul'] },\n\t{ type: 'select', table: 'small', columns: ['integer'] },\n\t{ type: 'select', table: 'small', columns: ['real'] },\n\t{ type: 'select', table: 'small', columns: ['text'] },\n\t{ type: 'select', table: 'small', columns: ['blob'] },\n\t{ type: 'select', table: 'large_text', columns: ['text'] },\n\t{ type: 'select', table: 'large_blob', columns: ['blob'] },\n\t{ type: 'select-all', table: 'small', columns: ['nul'] },\n\t{ type: 'select-all', table: 'small', columns: ['integer'] },\n\t{ type: 'select-all', table: 'small', columns: ['real'] },\n\t{ type: 'select-all', table: 'small', columns: ['text'] },\n\t{ type: 'select-all', table: 'small', columns: ['blob'] },\n\t{ type: 'select-all', table: 'large_text', columns: ['text'] },\n\t{ type: 'select-all', table: 'large_blob', columns: ['blob'] },\n\t{ type: 'select-iterate', table: 'small', columns: ['nul'] },\n\t{ type: 'select-iterate', table: 'small', columns: ['integer'] },\n\t{ type: 'select-iterate', table: 'small', columns: ['real'] },\n\t{ type: 'select-iterate', table: 'small', columns: ['text'] },\n\t{ type: 'select-iterate', table: 'small', columns: ['blob'] },\n\t{ type: 'select-iterate', table: 'large_text', columns: ['text'] },\n\t{ type: 'select-iterate', table: 'large_blob', columns: ['blob'] },\n\t{ type: 'insert', table: 'small', columns: ['nul'] },\n\t{ type: 'insert', table: 'small', columns: ['integer'] },\n\t{ type: 'insert', table: 'small', columns: ['real'] },\n\t{ type: 'insert', table: 'small', columns: ['text'] },\n\t{ type: 'insert', table: 'small', columns: ['blob'] },\n\t{ type: 'insert', table: 'large_text', columns: ['text'] },\n\t{ type: 'insert', table: 'large_blob', columns: ['blob'] },\n\t{ type: 'transaction', table: 'small', columns: ['nul'] },\n\t{ type: 'transaction', table: 'small', columns: ['integer'] },\n\t{ type: 'transaction', table: 'small', columns: ['real'] },\n\t{ type: 'transaction', table: 'small', columns: ['text'] },\n\t{ type: 'transaction', table: 'small', columns: ['blob'] },\n\t{ type: 'transaction', table: 'large_text', columns: ['text'] },\n\t{ type: 'transaction', table: 'large_blob', columns: ['blob'] },\n];\n\n(() => {\n\tconst defaultPragma = [];\n\tconst yes = /^\\s*(1|true|on|yes)\\s*$/i;\n\tif (yes.test(process.env.NO_CACHE)) defaultPragma.push('cache_size = 0');\n\telse defaultPragma.push('cache_size = -16000');\n\tif (yes.test(process.env.NO_WAL)) defaultPragma.push('journal_mode = DELETE', 'synchronous = FULL');\n\telse defaultPragma.push('journal_mode = WAL', 'synchronous = NORMAL');\n\tfor (const trial of [].concat(...Object.values(exports))) {\n\t\ttrial.customPragma = trial.pragma || [];\n\t\ttrial.pragma = defaultPragma.concat(trial.customPragma);\n\t}\n})();\n"