"#!/usr/bin/env sh\n\n# ===\n# This script defines and generates the bundled SQLite3 unit (sqlite3.c).\n#\n# The following steps are taken:\n# 1. populate the shell environment with the defined compile-time options.\n# 2. download and extract the SQLite3 source code into a temporary directory.\n# 3. run \"sh configure\" and \"make sqlite3.c\" within the source directory.\n# 4. bundle the generated amalgamation into a tar.gz file (sqlite3.tar.gz).\n# 5. export the defined compile-time options to a gyp file (defines.gypi).\n# 6. update the docs (../docs/compilation.md) with details of this distribution.\n#\n# When a user builds better-sqlite3, the following steps are taken:\n# 1. node-gyp loads the previously exported compile-time options (defines.gypi).\n# 2. the extract.js script unpacks the bundled amalgamation (sqlite3.tar.gz).\n# 3. node-gyp compiles the extracted sqlite3.c along with better_sqlite3.cpp.\n# 3. node-gyp links the two resulting binaries to generate better_sqlite3.node.\n# ===\n\nVERSION=\"3320000\"\nYEAR=\"2020\"\n\nDEFINES=\"\nSQLITE_DQS=0\nSQLITE_LIKE_DOESNT_MATCH_BLOBS\nSQLITE_THREADSAFE=2\nSQLITE_USE_URI=0\nSQLITE_DEFAULT_MEMSTATUS=0\nSQLITE_OMIT_DEPRECATED\nSQLITE_OMIT_GET_TABLE\nSQLITE_OMIT_TCL_VARIABLE\nSQLITE_OMIT_PROGRESS_CALLBACK\nSQLITE_OMIT_SHARED_CACHE\nSQLITE_TRACE_SIZE_LIMIT=32\nSQLITE_DEFAULT_CACHE_SIZE=-16000\nSQLITE_DEFAULT_FOREIGN_KEYS=1\nSQLITE_DEFAULT_WAL_SYNCHRONOUS=1\nSQLITE_ENABLE_COLUMN_METADATA\nSQLITE_ENABLE_UPDATE_DELETE_LIMIT\nSQLITE_ENABLE_STAT4\nSQLITE_ENABLE_FTS3_PARENTHESIS\nSQLITE_ENABLE_FTS3\nSQLITE_ENABLE_FTS4\nSQLITE_ENABLE_FTS5\nSQLITE_ENABLE_JSON1\nSQLITE_ENABLE_RTREE\nSQLITE_ENABLE_GEOPOLY\nSQLITE_INTROSPECTION_PRAGMAS\nSQLITE_SOUNDEX\n\"\n\n# ========== START SCRIPT ========== #\n\necho \"setting up environment...\"\nDEPS=\"$(CDPATH= cd -- \"$(dirname -- \"$0\")\" && pwd)\"\nTEMP=\"$DEPS/temp\"\nrm -rf \"$TEMP\"\nmkdir -p \"$TEMP\"\nexport CFLAGS=`echo $(echo \"$DEFINES\" | sed -e \"/^\\s*$/d\" -e \"s/^/-D/\")`\n\necho \"downloading source...\"\ncurl -#f \"https://www.sqlite.org/$YEAR/sqlite-src-$VERSION.zip\" > \"$TEMP/source.zip\" || exit 1\n\necho \"extracting source...\"\nunzip \"$TEMP/source.zip\" -d \"$TEMP\" > /dev/null || exit 1\ncd \"$TEMP/sqlite-src-$VERSION\"\n\necho \"configuring amalgamation...\"\nsh configure > /dev/null || exit 1\n\necho \"building amalgamation...\"\nmake sqlite3.c > /dev/null || exit 1\n\necho \"generating tarball...\"\ntar czf \"$DEPS/sqlite3.tar.gz\" sqlite3.c sqlite3.h sqlite3ext.h || exit 1\n\necho \"updating gyp configs...\"\nGYP=\"$DEPS/defines.gypi\"\nprintf \"# THIS FILE IS AUTOMATICALLY GENERATED (DO NOT EDIT)\\n\\n{\\n  'defines': [\\n\" > \"$GYP\"\nprintf \"$DEFINES\" | sed -e \"/^\\s*$/d\" -e \"s/\\(.*\\)/    '\\1',/\" >> \"$GYP\"\nprintf \"  ],\\n}\\n\" >> \"$GYP\"\n\necho \"updating docs...\"\nDOCS=\"$DEPS/../docs/compilation.md\"\nMAJOR=`expr \"${VERSION:0:1}\" + 0`\nMINOR=`expr \"${VERSION:1:2}\" + 0`\nPATCH=`expr \"${VERSION:3:2}\" + 0`\nsed -Ei \"\" -e \"s/version [0-9]+\\.[0-9]+\\.[0-9]+/version $MAJOR.$MINOR.$PATCH/g\" \"$DOCS\"\nsed -i \"\" -e \"/^SQLITE_/,\\$d\" \"$DOCS\"\nprintf \"$DEFINES\" | sed -e \"/^\\s*$/d\" >> \"$DOCS\"\nprintf \"\\`\\`\\`\\n\" >> \"$DOCS\"\n\necho \"cleaning up...\"\ncd - > /dev/null\nrm -rf \"$TEMP\"\n\necho \"done!\"\n"