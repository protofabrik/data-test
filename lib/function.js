"'use strict';\nconst { getBooleanOption } = require('./util');\n\nmodule.exports = (createFunction) => {\n\treturn function defineFunction(name, options, fn) {\n\t\tif (options == null) options = {};\n\t\tif (typeof options === 'function') { fn = options; options = {}; }\n\t\tif (typeof name !== 'string') throw new TypeError('Expected first argument to be a string');\n\t\tif (typeof fn !== 'function') throw new TypeError('Expected last argument to be a function');\n\t\tif (typeof options !== 'object') throw new TypeError('Expected second argument to be an options object');\n\t\tif (!name) throw new TypeError('User-defined function name cannot be an empty string');\n\n\t\tconst safeIntegers = 'safeIntegers' in options ? +getBooleanOption(options, 'safeIntegers') : 2;\n\t\tconst deterministic = getBooleanOption(options, 'deterministic');\n\t\tconst varargs = getBooleanOption(options, 'varargs');\n\t\tlet argCount = -1;\n\n\t\tif (!varargs) {\n\t\t\targCount = fn.length;\n\t\t\tif (!Number.isInteger(argCount) || argCount < 0) throw new TypeError('Expected function.length to be a positive integer');\n\t\t\tif (argCount > 100) throw new RangeError('User-defined functions cannot have more than 100 arguments');\n\t\t}\n\n\t\treturn createFunction.call(this, fn, name, argCount, safeIntegers, deterministic);\n\t};\n};\n"