"'use strict';\nconst fs = require('fs');\nconst path = require('path');\nconst util = require('./util');\n\nconst {\n\tDatabase: CPPDatabase,\n\tsetErrorConstructor,\n} = require('bindings')('better_sqlite3.node');\n\nfunction Database(filenameGiven, options) {\n\tif (filenameGiven == null) filenameGiven = '';\n\tif (options == null) options = {};\n\tif (typeof filenameGiven !== 'string') throw new TypeError('Expected first argument to be a string');\n\tif (typeof options !== 'object') throw new TypeError('Expected second argument to be an options object');\n\tif ('readOnly' in options) throw new TypeError('Misspelled option \"readOnly\" should be \"readonly\"');\n\tif ('memory' in options) throw new TypeError('Option \"memory\" was removed in v7.0.0 (use \":memory:\" filename instead)');\n\n\tconst filename = filenameGiven.trim();\n\tconst anonymous = filename === '' || filename === ':memory:';\n\tconst readonly = util.getBooleanOption(options, 'readonly');\n\tconst fileMustExist = util.getBooleanOption(options, 'fileMustExist');\n\tconst timeout = 'timeout' in options ? options.timeout : 5000;\n\tconst verbose = 'verbose' in options ? options.verbose : null;\n\n\tif (readonly && anonymous) throw new TypeError('In-memory/temporary databases cannot be readonly');\n\tif (!Number.isInteger(timeout) || timeout < 0) throw new TypeError('Expected the \"timeout\" option to be a positive integer');\n\tif (timeout > 0x7fffffff) throw new RangeError('Option \"timeout\" cannot be greater than 2147483647');\n\tif (verbose != null && typeof verbose !== 'function') throw new TypeError('Expected the \"verbose\" option to be a function');\n\n\tif (!anonymous && !fs.existsSync(path.dirname(filename))) {\n\t\tthrow new TypeError('Cannot open database because the directory does not exist');\n\t}\n\treturn new CPPDatabase(filename, filenameGiven, anonymous, readonly, fileMustExist, timeout, verbose || null);\n}\n\nsetErrorConstructor(require('./sqlite-error'));\nutil.wrap(CPPDatabase, 'pragma', require('./pragma'));\nutil.wrap(CPPDatabase, 'function', require('./function'));\nutil.wrap(CPPDatabase, 'aggregate', require('./aggregate'));\nutil.wrap(CPPDatabase, 'backup', require('./backup'));\nCPPDatabase.prototype.transaction = require('./transaction');\nCPPDatabase.prototype.constructor = Database;\nDatabase.prototype = CPPDatabase.prototype;\nmodule.exports = Database;\n"